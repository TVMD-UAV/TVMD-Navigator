<launch>
    <!-- Choosing IMU source: px4 / esp -->
    <arg name="imu_source" default="px4"/> 

    <arg name="cam_imu_config"         default="$(find cam_calibr)/configs/cam-px4imu-calibr/config/rs_d435_imu_config.yaml"/>
    <arg name="color_width"         default="640"/>
    <arg name="color_height"        default="480"/>
    <arg name="color_fps"           default="15"/>
    <arg name="enable_depth"        default="false"/>
    

    <arg name="fcu_url"     default="/dev/ttyTHS1:921600"/>
    <!-- Disable ground control station proxy -->
    <arg name="gcs_url"     default=""/>

    <!-- ====================================================== -->
    <!-- =============== Starting Sensor Nodes ================ -->
    <!-- ====================================================== -->
    <!-- <include file="$(find cam_calibr)/launch/cam_imu_start.launch">
    </include> -->

    <!-- Using RealSense -->
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="color_width"     value="$(arg color_width)"/>
        <arg name="color_height"    value="$(arg color_height)"/>
        <arg name="color_fps"       value="$(arg color_fps)"/>
        <arg name="enable_depth"    value="$(arg enable_depth)"/>
    </include>

    <!-- Using IMU data from ESP32 -->
    <group if="$(eval arg('imu_source') == 'esp')">
        <node name="imu_node" pkg="imu-listener" type="imu-listener_node" output="screen" />
        <node pkg="tf" type="static_transform_publisher" name="tf_odom_externalPoseParentFrame"
            args="0 0 0 1.57079632679 -1.57079632679 0 odom_ned world 1000"/>
    </group>
    
    <!-- Using IMU data from PX4 -->
    <!-- <group if="$(eval arg('imu_source') == 'px4')"> -->
        <remap from="sensors/imu" to="mavros/imu/data_raw"/>
        <node pkg="tf" type="static_transform_publisher" name="tf_odom_externalPoseParentFrame"
            args="0 0 0 0 0 0 odom_ned world 1000"/>
    <!-- </group> -->



    <!-- ====================================================== -->
    <!-- ================= Running VINS-MONO ================== -->
    <!-- ====================================================== -->
    <node name="vins_node" pkg="vins" type="vins_node" args="$(arg cam_imu_config)" output="screen" />
    <node name="vins_loop_node" pkg="loop_fusion" type="loop_fusion_node" args="$(arg cam_imu_config)" output="screen" />
    

    <!-- ====================================================== -->
    <!-- ======================= MAVROS ======================= -->
    <!-- ====================================================== -->
    <include file="$(find mavros)/launch/px4.launch">
        <arg name="fcu_url"     value="$(arg fcu_url)"/>
        <arg name="gcs_url"     value="$(arg gcs_url)"/>
    </include>

    <!-- The odometry twist generated by VINS-MONO does not represent 
         in body frame but inertial frame, and therefore we can not use 
         the direct remapping -->
    <!-- <remap from="mavros/odometry/out" to="vins_node/odometry"/> -->

    <!-- This node will transform the odometry twist from 
         the inertial frame (world) to body frame (base_link_frd) -->
    <node name="odom_repub_node" pkg="odometry_publisher" type="odometry_republisher_node" output="screen" />

</launch>
