<launch>
    <arg name="color_width"         default="640"/>
    <arg name="color_height"        default="480"/>
    <arg name="color_fps"           default="30"/>
    <arg name="enable_depth"        default="false"/>
    
    <arg name="camera_name"         default="camera/color"/>
    <arg name="image_topic"        default="image_raw"/>

    <arg name="fcu_url"     default="/dev/ttyTHS1:921600"/>
    <!-- Disable ground control station proxy -->
    <arg name="gcs_url"     default=""/>

    <!-- ====================================================== -->
    <!-- =============== Starting Camera Nodes ================ -->
    <!-- ====================================================== -->
    <!-- Using RealSense -->
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="color_width"     value="$(arg color_width)"/>
        <arg name="color_height"    value="$(arg color_height)"/>
        <arg name="color_fps"       value="$(arg color_fps)"/>
        <arg name="enable_depth"    value="$(arg enable_depth)"/>
    </include>

    <!-- ====================================================== -->
    <!-- ====================== APRILTAG ====================== -->
    <!-- ====================================================== -->
    <!-- set to value="gdbserver localhost:10000" for remote debugging -->
    <arg name="launch_prefix" default="" />
    <arg name="queue_size" default="1" />

    <!-- apriltag_ros continuous detection node -->
    <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_ros_continuous_node" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)">
        <!-- Remap topics from those used in code to those on the ROS network -->
        <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
        <remap from="camera_info" to="$(arg camera_name)/camera_info" />

        <param name="publish_tag_detections_image" type="bool" value="true" /><!-- default: false -->
        <param name="queue_size" type="int" value="$(arg queue_size)" />

        <!-- load parameters (incl. tag family, tags, etc.) -->
        <rosparam command="load" file="$(find odometry_publisher)/configs/settings.yaml"/>
        <rosparam command="load" file="$(find odometry_publisher)/configs/tags.yaml"/>
    </node>
    
    <!-- ====================================================== -->
    <!-- ======================= MAVROS ======================= -->
    <!-- ====================================================== -->
    <include file="$(find mavros)/launch/px4.launch">
        <arg name="fcu_url"     value="$(arg fcu_url)"/>
        <arg name="gcs_url"     value="$(arg gcs_url)"/>
    </include>

    <!-- The tag's coordinate frame is centered at the center of the tag, with x-axis to the right, y-axis down, and z-axis into the tag.  -->
    <node pkg="tf" type="static_transform_publisher" name="tf_odom_externalPoseParentFrame"
        args="0 0 0 -1.57079632679 0 0 marker_frame odom_ned 1000"/>

    <node pkg="tf" type="static_transform_publisher" name="tf_odom_externalPoseChildFrame"
        args="0 0 0 -1.57079632679 0 0 camera_color_optical_frame base_link_frd 1000"/>

    <!-- This node will inverse the odometry (the apriltag-ros reads marker pose and express it in camera frame) -->
    <node name="odom_repub_node" pkg="odometry_publisher" type="april_odometry_republisher_node" output="screen" />

</launch>
